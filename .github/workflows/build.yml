name: build

on:
  push:
    branches: [ version_4, version_4.3, main ]
  pull_request:
    branches: [ version_4, version_4.3, main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        compiler: [g++, clang++]

    steps:

    - uses: actions/checkout@v3

    - name: set compiler - ${{ matrix.compiler }}
      env:
        CC: ${{ matrix.compiler }}
      run: echo compiling with ${{ matrix.compiler }}

    - name: build and compile the static library.
      run: make -j8 -f static

    - name: run the tests for the static library.
      run: make -j8 -f static static_test

    - name: clean test executables
      run: make -j8 clean

    - name: install the static library.
      run: sudo make -j8 -f static install

    - name: compile the static sample program for the library  ${{ matrix.compiler }}.
      run: ${{ matrix.compiler }} ubint_build.cpp -o ubint_build.out -lapa -fsanitize=address

    - name: run the sample program for the library.
      run: ./ubint_build.out

    - name: uninstall the static library.
      run: sudo make -j8 -f static uninstall

    - name: cleanup
      run: make -j8 -f static cleanup
