#include <iostream>
#include "../limb.hpp"

using namespace backend_bigint;

int main()
{
    limb x("8748374873666634");
    limb y("77237234");

    limb k = limb::karatsuba(x,y);

    std::cout<<"k = "<<k.string_form()<<'\n';

    if(k.string_form()=="675700277237110248250356")
    {
        std::cout<<"karatsuba 1 is correct\n";
    }
    else throw std::logic_error("karatsuba is incorrect");

    // karatsuba cannot solve this
    // limb a("8468236482634862374632647623463856435634657465862347625874652367523845823584235483465384532674572354824823542835"
    //        "7846573658364785645684658639562374692746172451294154105100401746102402104014127647835683603562374610246012631270"
    //        "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"),
    //      b("7867867234236472300000000000000000000000000000000000000000000000002734723647283346273468327467236451263571212362"
    //        "3784627364873648367236487623874623764725455124128351276357254723589345876345634756983652384682364734762374637846");

    limb a("91826653846823647773847283728377"),
         b("78678672923892389888473666473784");

    limb c = limb::karatsuba(a,b);

    // still wrong
    std::cout<<"\n\na = "<<a.string_form()<<'\n';
    std::cout<<"\nb = "<<b.string_form()<<'\n';
    std::cout<<"\nc = "<<c.string_form()<<'\n';

    return 0;
}

// cannot implement karatsuba in limb arithmetic, it should be done in bigint interface